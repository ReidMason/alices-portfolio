---
import Layout from "../../layouts/Layout.astro";
import { Image } from "@astrojs/image/components";
import type { Project } from "../../projects";
import getProjects from "../../projects";

const projects = getProjects();
export async function getStaticPaths() {
  const projects = getProjects();
  return projects.map((project) => {
    return {
      params: { slug: project.slug },
      props: {
        project,
      },
    };
  });
}

interface Props {
  project: Project;
}

const { project } = Astro.props;
const currentIndex = projects.findIndex((x) => x.slug == project.slug);
const next =
  currentIndex + 1 < projects.length ? projects[currentIndex + 1] : null;
const prev = currentIndex - 1 >= 0 ? projects[currentIndex - 1] : null;
---

<Layout title={project.name}>
  <main class="flex flex-col md:px-20">
    <h1 class="text-5xl mb-8 md:mb-12 leading-tight">
      {project.name}
    </h1>
    {
      project.metadata.description && (
        <h2 class="text-lg max-w-4xl mb-12 md:mb-20">
          {project.metadata.description}
        </h2>
      )
    }

    <div class="grid md:grid-cols-2 gap-4 md:gap-8">
      <div class="flex md:hidden flex-col gap-4 md:gap-8">
        {project.imageData.images.map((x) => <Image src={x.src} alt={x.alt} />)}
      </div>

      <div class="hidden md:flex flex-col gap-4 md:gap-8">
        {
          project.imageData.images.map((x, i) => {
            if (i % 2 == 0)
              return (
                <Image
                  src={x.src}
                  alt={x.alt}
                  width={x.src.width / 2}
                  height={x.src.height / 2}
                />
              );
          })
        }
      </div>
      <div class="hidden md:flex flex-col gap-4 md:gap-8">
        {
          project.imageData.images.map((x, i) => {
            if (i % 2 != 0)
              return (
                <Image
                  src={x.src}
                  alt={x.alt}
                  width={x.src.width / 2}
                  height={x.src.height / 2}
                />
              );
          })
        }
      </div>
    </div>

    <div class="flex mt-12">
      {
        prev && (
          <a
            class="text-2xl flex items-center gap-1"
            href={`/project/${prev.slug}`}
          >
            <svg
              xmlns="http://www.w3.org/2000/svg"
              fill="none"
              viewBox="0 0 24 24"
              stroke-width="1.5"
              stroke="currentColor"
              class="w-6 h-6"
            >
              <path
                stroke-linecap="round"
                stroke-linejoin="round"
                d="M15.75 19.5L8.25 12l7.5-7.5"
              />
            </svg>
            {prev.name}
          </a>
        )
      }
      {
        next && (
          <a
            class="ml-auto text-2xl flex items-center gap-1"
            href={`/project/${next.slug}`}
          >
            {next.name}
            <svg
              xmlns="http://www.w3.org/2000/svg"
              fill="none"
              viewBox="0 0 24 24"
              stroke-width="1.5"
              stroke="currentColor"
              class="w-5 h-5"
            >
              <path
                stroke-linecap="round"
                stroke-linejoin="round"
                d="M8.25 4.5l7.5 7.5-7.5 7.5"
              />
            </svg>
          </a>
        )
      }
    </div>
  </main>
</Layout>
