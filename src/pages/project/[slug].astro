---
import { getCollection, CollectionEntry } from "astro:content";
import Layout from "../../layouts/Layout.astro";

const projects = await getCollection("project");
export async function getStaticPaths() {
  const projects = await getCollection("project");
  return projects.map((project) => {
    return {
      params: { slug: project.slug },
      props: {
        project,
      },
    };
  });
}

interface Props {
  project: CollectionEntry<"project">;
}

const { project } = Astro.props;
const currentIndex = projects.findIndex((x) => x.id == project.id);
const next =
  currentIndex + 1 < projects.length ? projects[currentIndex + 1] : null;
const prev = currentIndex - 1 >= 0 ? projects[currentIndex - 1] : null;

const { Content } = await project.render();
---

<Layout title={project.data.title}>
  <main class="flex flex-col md:px-20">
    <h1 class="text-5xl mb-8 md:mb-12">{project.data.title}</h1>
    <h2 class="text-lg max-w-4xl mb-12 md:mb-20">
      {project.data.description}
    </h2>

    <div class="grid grid-cols-2 masonry gap-4 md:gap-8">
      <div class="flex flex-col gap-4 md:gap-8">
        {
          project.data.images.map((x, i) => {
            if (i % 2 == 0) return <img src={x} />;
          })
        }
      </div>
      <div class="flex flex-col gap-4 md:gap-8">
        {
          project.data.images.map((x, i) => {
            if (i % 2 != 0) return <img src={x} />;
          })
        }
      </div>
    </div>

    <div class="flex mt-12">
      {
        prev && (
          <a
            class="text-2xl flex items-center gap-1"
            href={`/project/${prev.slug}`}
          >
            <svg
              xmlns="http://www.w3.org/2000/svg"
              fill="none"
              viewBox="0 0 24 24"
              stroke-width="1.5"
              stroke="currentColor"
              class="w-6 h-6"
            >
              <path
                stroke-linecap="round"
                stroke-linejoin="round"
                d="M15.75 19.5L8.25 12l7.5-7.5"
              />
            </svg>
            {prev.data.title}
          </a>
        )
      }
      {
        next && (
          <a
            class="ml-auto text-2xl flex items-center gap-1"
            href={`/project/${next.slug}`}
          >
            {next.data.title}
            <svg
              xmlns="http://www.w3.org/2000/svg"
              fill="none"
              viewBox="0 0 24 24"
              stroke-width="1.5"
              stroke="currentColor"
              class="w-5 h-5"
            >
              <path
                stroke-linecap="round"
                stroke-linejoin="round"
                d="M8.25 4.5l7.5 7.5-7.5 7.5"
              />
            </svg>
          </a>
        )
      }
    </div>
  </main>
</Layout>

<style>
  .masonry {
    grid-template-rows: masonry;
  }
</style>
